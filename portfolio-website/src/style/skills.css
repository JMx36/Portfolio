.skills-section
{
    display: flex;
    flex-direction: column;
    margin: 0px 0px;
    max-width: 100%;
    min-height: 100vh;
}

.skills-section .header
{
    display: flex;
    margin: 5% 5%;
    margin-bottom: 1%;
    align-items: center;
    justify-content: center;
}

.title-text-padding
{
    margin: 0% 7%;
}

.diamond-line
{
    position: relative;
    width: 60%;
    padding: 0.3rem;
    background-color: var(--bright-yellow);
}

.diamond-line::before, 
.diamond-line::after
{
    content:"";
    position: absolute;
    width: 1.5em;
    height: 1.5em; 
    background-color: var(--bright-yellow); 
}

.diamond-line::before {
    left: -5px; 
    top: 50%;
    transform: translateY(-50%) rotate(45deg); 
}

.diamond-line::after {
    right: -5px; 
    top: 50%;
    transform: translateY(-50%) rotate(45deg); 
}


.tech-and-tools
{
    display: flex;
    flex-direction: column;
    /* justify-content: center;
    align-items: center; */
}

.tech-and-tools .top-part
{
    display: flex;
    width: 100%;

    align-items: center;
    justify-content: center;
    margin-top: 10%;
}

.caption
{
    color: black;
    text-align: center;
    margin: 4% auto;
    width: 90%;
}

.gears-box
{
    width: 25%;
    min-height: 10rem;
    background-image: url("../assets/Images/Components/gear-group.png");
    background-size: 100% 100%;
    background-position: left;
    background-repeat: no-repeat;
    /* border: black 2px solid; */
}

.skills-buttons-container
{
    display: flex;
    margin: 10% auto;
    margin-top: 3%;
}

@media (max-width: 1000px) {

    .gears-box
    {
        min-height: 4rem;
    }

}

.carousel-container
{
    --play-state: running;
    width: 100%;
    overflow: hidden;
    border-top: solid 3px black;
    border-bottom: solid 3px black;
}

.carousel-inner
{
    display: flex;
    align-items: center;
    width: 100%;
    gap: 1%;
    transform: translateX(-141%); 
    transform: translateX(-5%); 
    animation: slide 10s linear infinite;
}

@keyframes slide {
    
    0% 
    {
        transform: translateX(-5%);
    }

    100%
    {
        transform: translateX(-141%);
    }
}

.carousel-paused
{
    animation-play-state: paused;
}

.dropdowns-section
{
    margin-top: 5%;    
}

.dropdown-container
{
    display: flex;
    flex-direction: column;
    overflow: hidden;
    --heigh-container: 100%;
    /* border: solid 4px black */
}

.dropdown-box
{
    flex: 1;

    display: flex;
    flex-direction: column;

    position: relative;
    color: white;
    align-items: center;
    padding: 2%;
}

.dropdown-row
{
    display: flex;
    max-width: 100%;
}

.dropdown-title
{
    position: relative;
    overflow: hidden;
    margin-bottom: 0px;
    margin-top: 0px;
    /* border: solid black 2px; */
}

.dropdown-title:hover
{
    color: var(--bright-yellow);
}

@keyframes triangle-animation{
    0% 
    {
        max-height: 10%;
    }

    100%
    {
        max-height: var(--heigh-container);
    }
}

.skill-triangle-animation
{
    animation: triangle-animation 1s linear 0s;
}

.skills-box
{
    border-radius: 50px;
}

.images-container
{
    margin-top: 0px;
    padding-left: 10px;
    padding-right: 10px;
    padding-bottom: 10px;
}

.skill-box-container
{
    margin: 4% 5%;
    text-decoration: underline;
    text-decoration-color: black;
    text-decoration-thickness: 2px;
    display: flex;
    flex-direction: column;
}

.bottom-header
{
    margin: 3% 5%;
    width: 90%;
    margin-bottom: 6%;
}


@media (max-width: 1000px) {
    .skills-description
    {
        max-width: 60%;
        margin: 5% auto;
        flex-direction: column;
        gap: 4vh;
    }
}



/* Description Boxes */


.skills-description
{
    display: flex;
    flex-direction: column;
    color: var(--title-blue);
    background-color: var(--background-blue);
}

.skills-description .boxes-container
{
    display: flex;
    gap: 3%;
    margin: 5% 5%;
    max-width: 100%;
    overflow: hidden;
}

.description-box
{
    flex: 1;
    display: flex;
    flex-direction: column;
    background-color: #02313A;
    /* border: 0.3vw solid var(--light-blue-edge); */
    border: 0.3vw solid white;
    border-radius: 26px; /* Rounded corners */
}



/* Circular Skills */

.circular-skills-section
{
    max-width: 100%;
    display: flex;
    flex-direction: column;
}

.circular-skills-container
{
    position: relative;
    height: clamp(200px, 90vh, 900px);
    --radius: 300px;
    --start-degree-angle: -90deg;
    --move-angle-factor: 72deg;
}

.selector-circle
{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    height: 50%;
    width: 25%;
    animation: idle-circle 4s linear infinite;
}

.selector-circle .blur-circle
{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background: radial-gradient(47.4% 50% at 50% 50%, #025968 40%, #FFFFFF 80%);
    /* background: var(--background-blue); */
    filter: blur(25px);
    
}

.selector-circle .text
{
    position: absolute;
    margin: 0;
    padding: 0;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

}


.absolute-center
{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.move-corner1
{
    --rotation: var(--start-degree-angle);

    transform: rotate(var(--rotation))  translateX(var(--radius)) rotate(calc(-1 * var(--rotation))) translate(-50%, -50%);
}

.move-corner2
{
    --rotation: calc(var(--start-degree-angle) + (1 * var(--move-angle-factor)));

    transform: rotate(var(--rotation))  translateX(var(--radius)) rotate(calc(-1 * var(--rotation))) translate(-50%, -50%);
}

.move-corner3
{
    --rotation: calc(var(--start-degree-angle) + (2 * var(--move-angle-factor)));

    transform: rotate(var(--rotation))  translateX(var(--radius)) rotate(calc(-1 * var(--rotation))) translate(-50%, -50%);
}

.move-corner4
{
    --rotation: calc(var(--start-degree-angle) + (3 * var(--move-angle-factor)));

    transform: rotate(var(--rotation))  translateX(var(--radius)) rotate(calc(-1 * var(--rotation))) translate(-50%, -50%);
}

.move-corner5
{
    --rotation: calc(var(--start-degree-angle) + (4 * var(--move-angle-factor)));

    transform: rotate(var(--rotation))  translateX(var(--radius)) rotate(calc(-1 * var(--rotation))) translate(-50%, -50%);
}

@keyframes idle-circle 
{
    0% 
    {
        height: 35%;
        width: 15%;
    }
    50%
    {
        height: 45%;
        width: 20%;
    }

    100%
    {
        height: 35%;
        width: 15%;
    }
}

